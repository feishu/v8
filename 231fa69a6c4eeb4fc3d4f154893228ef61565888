{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d459144_07b50dc2",
        "filename": "src/runtime/runtime-regexp.cc",
        "patchSetId": 5
      },
      "lineNbr": 1283,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-10-02T13:58:29Z",
      "side": 1,
      "message": "```suggestion\n  //   - either: one smi that encodes offset and length\n```",
      "range": {
        "startLine": 1283,
        "startChar": 30,
        "endLine": 1283,
        "endChar": 36
      },
      "revId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcf61376_2e82621f",
        "filename": "src/strings/string-builder.cc",
        "patchSetId": 5
      },
      "lineNbr": 403,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-10-02T13:58:29Z",
      "side": 1,
      "message": "```suggestion\n  uint32_t truncated_hash \u003d hash \u0026 ~(1u \u003c\u003c kSmiValueSize);\n```",
      "range": {
        "startLine": 403,
        "startChar": 43,
        "endLine": 403,
        "endChar": 45
      },
      "revId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c739d7c_4918d08e",
        "filename": "src/strings/string-builder.cc",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-10-02T13:58:29Z",
      "side": 1,
      "message": "Please add comments explaining the ix0/ix1 cases.",
      "range": {
        "startLine": 405,
        "startChar": 2,
        "endLine": 405,
        "endChar": 4
      },
      "revId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d24609_9b3140e6",
        "filename": "src/strings/string-builder.cc",
        "patchSetId": 5
      },
      "lineNbr": 444,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-10-02T13:58:29Z",
      "side": 1,
      "message": "```suggestion\n  uint32_t truncated_hash \u003d hash \u0026 ~(1u \u003c\u003c kSmiValueSize);\n```",
      "range": {
        "startLine": 444,
        "startChar": 43,
        "endLine": 444,
        "endChar": 45
      },
      "revId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84e49bc1_28f419bc",
        "filename": "src/strings/string-builder.cc",
        "patchSetId": 5
      },
      "lineNbr": 447,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-10-02T13:58:29Z",
      "side": 1,
      "message": "Please also add a comment here. At a first glance this looked like some sort of restricted linear probing",
      "range": {
        "startLine": 447,
        "startChar": 6,
        "endLine": 447,
        "endChar": 7
      },
      "revId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9e8c12b_0e345b62",
        "filename": "src/strings/string-builder.cc",
        "patchSetId": 5
      },
      "lineNbr": 453,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-10-02T13:58:29Z",
      "side": 1,
      "message": "I am surprised that this whole cache provides any benefits, given how expensive these comparisons are.\nCould you also verify on pinpoint on M1 before landing (M1 results are usually more stable than x64 linux ones).",
      "range": {
        "startLine": 453,
        "startChar": 5,
        "endLine": 453,
        "endChar": 11
      },
      "revId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a V8 committer, code review is required from one other committer (see https://v8.dev/docs/become-committer). Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-v8-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-v8-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["uploaderin:cria/project-v8-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*Unresolved-Comment-Reason:.*\""]}
      },
      "patchSetCommitId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "231fa69a6c4eeb4fc3d4f154893228ef61565888",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}