{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "541440db_ed5abdae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-10-31T19:56:01Z",
      "side": 1,
      "message": "I have applied comments from our meeting with Simon today. I have added some comments in `break-on-exception-..` expected file. Please take a look and let me know what is still missing. Thanks",
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67dc41d4_5e60b289",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-11-01T17:45:32Z",
      "side": 1,
      "message": "lgtm % the break-on-exception test questions for Simon.",
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63638713_741ea4c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-11-04T12:37:02Z",
      "side": 1,
      "message": "Let me know if you need help debugging this.",
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7f8666f_b436dec8",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 23,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-10-31T19:56:01Z",
      "side": 1,
      "message": "That is strange that it gets paused on uncaught exceptions as well. It seems that it shouldn\u0027t.",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32af66d5_88ce2618",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 23,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-11-04T12:37:02Z",
      "side": 1,
      "message": "What does the handler table for the bytecode look like? The region should not be marked as CAUGHT_BY_JAVASCRIPT, as that is our signal that it is caught. If the problem is specific to await using, perhaps you have added a builtin continuation that we have to treat as non-handling akin to a finally?",
      "parentUuid": "e7f8666f_b436dec8",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "763ee15c_684efa27",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 23,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-11-05T12:14:08Z",
      "side": 1,
      "message": "Please look at the comment I added in `bytecode-generator.cc` file. I think I fixed the problem related to this part but the test result is still the same.",
      "parentUuid": "32af66d5_88ce2618",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fc838c1_401111d3",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 23,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-11-05T12:44:19Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "763ee15c_684efa27",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b97e920_4f789a57",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-10-31T19:56:01Z",
      "side": 1,
      "message": "In some cases, there are two `paused on exception` that does not seem right to me. Any ideas what that happens?",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "accfea16_147cac7e",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-11-04T07:11:26Z",
      "side": 1,
      "message": "I think this is because exceptions from all dispose handlers are caught in the generated bytecode and then thrown as a collected error.\n\n@leese@chromium.org: Do you know how this should work? My intuition is that we should pause on each individual error thrown by dispose handlers, but then ignore the re-thrown collected error?",
      "parentUuid": "6b97e920_4f789a57",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "976dcfd1_8c0800c6",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-11-04T09:38:29Z",
      "side": 1,
      "message": "@leese@chromium.org: The bytecode-generator impl is here: https://source.chromium.org/chromium/chromium/src/+/main:v8/src/interpreter/bytecode-generator.cc;l\u003d2800-2801;drc\u003d5de3cdee8a512769ee7c8e91b875a58d28f83452.\n\nMaybe you could take a look and see if the re-throw and catch prediction is done correctly?",
      "parentUuid": "accfea16_147cac7e",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92c30e65_06928d81",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-11-04T12:37:02Z",
      "side": 1,
      "message": "Nothing looks wrong there but I\u0027d need to see the actual bytecode being generated where it is stopping. What\u0027s important is to make sure you use the rethrow bytecode so we know it isn\u0027t a debug event.",
      "parentUuid": "976dcfd1_8c0800c6",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad2c50fe_c0106219",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-11-05T12:14:08Z",
      "side": 1,
      "message": "I don\u0027t understand this comment. Can you please explain a little bit about it?",
      "parentUuid": "92c30e65_06928d81",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0795d1a0_d7588f82",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-11-05T12:44:19Z",
      "side": 1,
      "message": "Just speculating on what might be wrong but it turns out you aren\u0027t using any bytecode to rethrow. See other comment.",
      "parentUuid": "ad2c50fe_c0106219",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2559cfd_3d38b6fb",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 125,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-11-04T12:37:02Z",
      "side": 1,
      "message": "So here we see the same exception twice, but the first time it is detected as caught and the second time it is uncaught, so we must be seeing the the disposal code as a try/catch rather than a try/finally and the disposal code must be rethrowing it with a kThrow rather than kRethrow instruction.",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3259ece7_c86bd87b",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 125,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-11-05T12:14:08Z",
      "side": 1,
      "message": "Based on the expected behavior of this new feature, we have to call disposal methods in a try/finally (https://github.com/tc39/proposal-explicit-resource-management) and not a try/catch, so I believe we cannot change this part. Also about the second part, we have already used throw instead of rethrow in disposal code (https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/js-disposable-stack.cc;l\u003d188;drc\u003da45502c46d75f210c783e07384138379ea1e46e4). Did you mean this part? If not, I may misunderstood which rethrowing you are pointing at.",
      "parentUuid": "e2559cfd_3d38b6fb",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec90b9bd_48db575b",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 125,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-11-05T12:44:19Z",
      "side": 1,
      "message": "I expect try/finally to work as desired. We should walk past that during catch prediction. But for some reason we are claiming the first exception is caught even though the rethrow is uncaught, suggesting that it is inside something marked as catching in the handler table which the rethrow is not. I don\u0027t know why we are seeing that; you should check the callstack at the time the exception is first thrown and see which call frame is detected as a try/catch, or step through  Isolate::WalkCallStackAndPromiseTree and see where it gets the idea that this is caught.\n\nFor the second part, yes that is what I was talking about although I didn\u0027t realize you were invoking Isolate::Throw from the runtime directly instead of putting an instruction in the bytecode. If you change this call to Rethrow, it shouldn\u0027t pause twice.",
      "parentUuid": "3259ece7_c86bd87b",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abf9f8cd_dc4dd735",
        "filename": "test/inspector/runtime/evaluate-repl-mode-using-await-using.js",
        "patchSetId": 19
      },
      "lineNbr": 11,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-11-01T17:45:32Z",
      "side": 1,
      "message": "It\u0027d be good to make this `throw` to show that the dispose methods are never called in repl mode.",
      "range": {
        "startLine": 11,
        "startChar": 118,
        "endLine": 11,
        "endChar": 128
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e799a27_2c914899",
        "filename": "test/inspector/runtime/evaluate-repl-mode-using-await-using.js",
        "patchSetId": 19
      },
      "lineNbr": 11,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-11-04T07:11:26Z",
      "side": 1,
      "message": "can we evaluate `x` and `y` afterwards to make sure that the variable actually got declared?",
      "range": {
        "startLine": 11,
        "startChar": 63,
        "endLine": 11,
        "endChar": 73
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04321fc1_969cd157",
        "filename": "test/inspector/runtime/evaluate-repl-mode-using-await-using.js",
        "patchSetId": 19
      },
      "lineNbr": 11,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-11-05T12:14:08Z",
      "side": 1,
      "message": "That\u0027s a good idea. Done",
      "parentUuid": "abf9f8cd_dc4dd735",
      "range": {
        "startLine": 11,
        "startChar": 118,
        "endLine": 11,
        "endChar": 128
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80440165_5ced45f2",
        "filename": "test/inspector/runtime/evaluate-repl-mode-using-await-using.js",
        "patchSetId": 19
      },
      "lineNbr": 11,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-11-05T12:14:08Z",
      "side": 1,
      "message": "Done. However, the expected result is showing Object/object. When I test it in the console, evaluating `x` results in `{value: 1, Symbol(Symbol.dispose): ƒ}`.",
      "parentUuid": "4e799a27_2c914899",
      "range": {
        "startLine": 11,
        "startChar": 63,
        "endLine": 11,
        "endChar": 73
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}