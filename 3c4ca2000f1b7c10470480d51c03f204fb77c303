{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "541440db_ed5abdae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-10-31T19:56:01Z",
      "side": 1,
      "message": "I have applied comments from our meeting with Simon today. I have added some comments in `break-on-exception-..` expected file. Please take a look and let me know what is still missing. Thanks",
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67dc41d4_5e60b289",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-11-01T17:45:32Z",
      "side": 1,
      "message": "lgtm % the break-on-exception test questions for Simon.",
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7f8666f_b436dec8",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 23,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-10-31T19:56:01Z",
      "side": 1,
      "message": "That is strange that it gets paused on uncaught exceptions as well. It seems that it shouldn\u0027t.",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 40
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b97e920_4f789a57",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1569532
      },
      "writtenOn": "2024-10-31T19:56:01Z",
      "side": 1,
      "message": "In some cases, there are two `paused on exception` that does not seem right to me. Any ideas what that happens?",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "accfea16_147cac7e",
        "filename": "test/inspector/debugger/break-on-exception-explicit-resource-management-expected.txt",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-11-04T07:11:26Z",
      "side": 1,
      "message": "I think this is because exceptions from all dispose handlers are caught in the generated bytecode and then thrown as a collected error.\n\n@leese@chromium.org: Do you know how this should work? My intuition is that we should pause on each individual error thrown by dispose handlers, but then ignore the re-thrown collected error?",
      "parentUuid": "6b97e920_4f789a57",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 20
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abf9f8cd_dc4dd735",
        "filename": "test/inspector/runtime/evaluate-repl-mode-using-await-using.js",
        "patchSetId": 19
      },
      "lineNbr": 11,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-11-01T17:45:32Z",
      "side": 1,
      "message": "It\u0027d be good to make this `throw` to show that the dispose methods are never called in repl mode.",
      "range": {
        "startLine": 11,
        "startChar": 118,
        "endLine": 11,
        "endChar": 128
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e799a27_2c914899",
        "filename": "test/inspector/runtime/evaluate-repl-mode-using-await-using.js",
        "patchSetId": 19
      },
      "lineNbr": 11,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-11-04T07:11:26Z",
      "side": 1,
      "message": "can we evaluate `x` and `y` afterwards to make sure that the variable actually got declared?",
      "range": {
        "startLine": 11,
        "startChar": 63,
        "endLine": 11,
        "endChar": 73
      },
      "revId": "3c4ca2000f1b7c10470480d51c03f204fb77c303",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}